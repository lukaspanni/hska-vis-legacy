apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: category-service
      name: category-service
    spec:
      ports:
        - name: "8080"
          port: 8080
          targetPort: 8080
      selector:
        io.kompose.service: category-service
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: product-service
      name: product-service
    spec:
      ports:
        - name: "8080"
          port: 8080
          targetPort: 8080
      selector:
        io.kompose.service: product-service
    status:
      loadBalancer: {}

  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: web-shop-db-image
      name: web-shop-db-image
    spec:
      ports:
        - name: "3306"
          port: 3306
          targetPort: 3306
      selector:
        io.kompose.service: web-shop-db-image
    status:
      loadBalancer: {}

  # - apiVersion: v1
  #   kind: Service
  #   metadata:
  #     creationTimestamp: null
  #     labels:
  #       run: nginx
  #     name: nginx
  #   spec:
  #     ports:
  #       - port: 80
  #         protocol: TCP
  #         targetPort: 80
  #     selector:
  #       run: nginx
  #     type: LoadBalancer
  #   status:
  #     loadBalancer: {}

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: category-service
      name: category-service
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: category-service
      strategy: {}
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.network/local-dev-net: "true"
            io.kompose.service: category-service
        spec:
          containers:
            - env:
                - name: MYSQL_HOST
                  value: web-shop-db-image
                - name: PRODUCT_ENDPOINT
                  value: product-service
              image: category-service
              imagePullPolicy: Never
              name: category-service
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
    status: {}

  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      creationTimestamp: null
      name: local-dev-net
    spec:
      ingress:
        - from:
            - podSelector:
                matchLabels:
                  io.kompose.network/local-dev-net: "true"
      podSelector:
        matchLabels:
          io.kompose.network/local-dev-net: "true"

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: product-service
      name: product-service
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: product-service
      strategy: {}
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.network/local-dev-net: "true"
            io.kompose.service: product-service
        spec:
          containers:
            - env:
                - name: CATEGORY_ENDPOINT
                  value: category-service
                - name: MYSQL_HOST
                  value: web-shop-db-image
              image: product-service
              imagePullPolicy: Never
              name: product-service
              ports:
                - containerPort: 8080
              resources: {}
          restartPolicy: Always
    status: {}

  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: web-shop-db-image
      name: web-shop-db-image
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: web-shop-db-image
      strategy:
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            io.kompose.network/local-dev-net: "true"
            io.kompose.service: web-shop-db-image
        spec:
          containers:
            - env:
                - name: MYSQL_ROOT_PASSWORD
                  value: c8de110f37300a53a971749
              image: web-shop-db-image
              imagePullPolicy: Never
              name: web-shop-db-image
              ports:
                - containerPort: 3306
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/mysql
                  name: web-shop-db-image-claim0
          restartPolicy: Always
          volumes:
            - name: web-shop-db-image-claim0
              persistentVolumeClaim:
                claimName: web-shop-db-image-claim0
    status: {}

  # - apiVersion: apps/v1
  #   kind: Deployment
  #   metadata:
  #     creationTimestamp: null
  #     labels:
  #       run: nginx
  #     name: nginx
  #   spec:
  #     replicas: 1
  #     selector:
  #       matchLabels:
  #         run: nginx
  #     strategy: {}
  #     template:
  #       metadata:
  #         creationTimestamp: null
  #         labels:
  #           run: nginx
  #       spec:
  #         containers:
  #           - image: nginx-proxy
  #             imagePullPolicy: Never
  #             name: nginx
  #             ports:
  #               - containerPort: 80
  #             resources: {}
  #   status: {}

  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: web-shop-db-image-claim0
      name: web-shop-db-image-claim0
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
kind: List
metadata: {}
